apiVersion: install.istio.io/v1alpha1
kind: IstioOperator
metadata:
  name: istio-operator
spec:
  components:
    base:
      enabled: true
    egressGateways:
      - name: istio-egressgateway
        enabled: false
        k8s:
          hpaSpec:
            maxReplicas: 5
            minReplicas: 2
    ingressGateways:
      - name: istio-ingressgateway
        enabled: true
        k8s:
          hpaSpec:
            maxReplicas: 5
            minReplicas: 2
    # The default profile is tuned to fit on smaller clusters.
    # Increase cpu req to ensure we can handle larger scale clusters.
    pilot:
      enabled: true
      k8s:
        env:
          - name: GKE_CLUSTER_URL
            value: "https://container.googleapis.com/v1/projects/PROJECT_ID/locations/us-central1-c/clusters/asm-cluster" # kpt-set: https://container.googleapis.com/v1/projects/${gcloud.core.project}/locations/${gcloud.compute.location}/clusters/${gcloud.container.cluster}
          - name: GCP_METADATA
            value: "PROJECT_ID|PROJECT_NUMBER|asm-cluster|us-central1-c" # kpt-set: ${gcloud.core.project}|${gcloud.project.projectNumber}|${gcloud.container.cluster}|${gcloud.compute.location}
          - name: SPIFFE_BUNDLE_ENDPOINTS
            value: "PROJECT_ID.svc.id.goog|https://storage.googleapis.com/mesh-ca-resources/spiffe_bundle.json" # kpt-set: ${gcloud.core.project}.svc.id.goog|https://storage.googleapis.com/mesh-ca-resources/spiffe_bundle.json
          - name: ENABLE_STACKDRIVER_MONITORING
            value: "true" # kpt-set: ${anthos.servicemesh.controlplane.monitoring.enabled}
          - name: TOKEN_AUDIENCES
            value: "PROJECT_ID.svc.id.goog" # kpt-set: istio-ca,${gcloud.core.project}.svc.id.goog
          - name: PILOT_ENABLE_CROSS_CLUSTER_WORKLOAD_ENTRY
            value: "true"
        resources:
          requests:
            cpu: 500m
        hpaSpec:
          minReplicas: 2
        replicaCount: 2
  hub: gcr.io/gke-release/asm # kpt-set: ${anthos.servicemesh.hub}
  meshConfig:
    defaultConfig:
      proxyMetadata:
        CA_PROVIDER: "GoogleCA"
        GCE_METADATA_HOST: "metadata.google.internal"
        GCP_METADATA: "PROJECT_ID|PROJECT_NUMBER|asm-cluster|us-central1-c" # kpt-set: ${gcloud.core.project}|${gcloud.project.projectNumber}|${gcloud.container.cluster}|${gcloud.compute.location}
        GKE_CLUSTER_URL: "https://container.googleapis.com/v1/projects/PROJECT_ID/locations/us-central1-c/clusters/asm-cluster" # kpt-set: https://container.googleapis.com/v1/projects/${gcloud.core.project}/locations/${gcloud.compute.location}/clusters/${gcloud.container.cluster}
        PLUGINS: "GoogleTokenExchange"
        USE_TOKEN_FOR_CSR: "true"
    # Locality load balancing is not supported
    localityLbSetting:
      enabled: false
    trustDomain: PROJECT_ID.svc.id.goog # kpt-set: ${gcloud.core.project}.svc.id.goog
    trustDomainAliases: # kpt-set: ${setters.anthos.servicemesh.trustDomainAliases}
      - PROJECT_ID.svc.id.goog # kpt-set: ${gcloud.core.project}.svc.id.goog
  profile: empty
  tag: 1.10.2-asm.1 # kpt-set: ${anthos.servicemesh.tag}
  values:
    global:
      caAddress: "meshca.googleapis.com:443"
      meshID: "proj-PROJECT_NUMBER" # kpt-set: proj-${gcloud.project.environProjectNumber}
      multiCluster:
        # Provided to ensure a human readable name rather than a UUID.
        clusterName: "cn-PROJECTID-us-central1-c-asm-cluster" # kpt-set: cn-${gcloud.core.project}-${gcloud.compute.location}-${gcloud.container.cluster}
      network: "NETWORK_ID" # kpt-set: ${gcloud.compute.network}
      pilotCertProvider: kubernetes
      sds:
        token:
          aud: "PROJECT_ID.svc.id.goog" # kpt-set: ${gcloud.core.project}.svc.id.goog
      sts:
        servicePort: 15463
    sidecarInjectorWebhook:
      rewriteAppHTTPProbe: true
    # Enable telemetry v2 backend by Stackdriver.
    # Prometheus is also supported with --set values.telemetry.v2.prometheus.enabled=true --set prometheus.enabled=true
    telemetry:
      enabled: true
      v2:
        enabled: true
        prometheus:
          enabled: false
        stackdriver:
          enabled: true
          inboundAccessLogging: "FULL"
          outboundAccessLogging: "ERRORS_ONLY"
          topology: true
