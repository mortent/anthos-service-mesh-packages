apiVersion: v1
kind: Namespace
metadata:
  name: asm-system
  labels:
    control-plane: controller-manager
  annotations:
    gke.io/cluster: "gke://PROJECT_ID/us-central1-c/asm-cluster" # kpt-set: gke://${gcloud.core.project}/${gcloud.compute.location}/${gcloud.container.cluster}
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: canonicalservices.anthos.cloud.google.com
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.5
    gke.io/cluster: "gke://PROJECT_ID/us-central1-c/asm-cluster" # kpt-set: gke://${gcloud.core.project}/${gcloud.compute.location}/${gcloud.container.cluster}
  creationTimestamp: "null"
spec:
  group: anthos.cloud.google.com
  names:
    kind: CanonicalService
    listKind: CanonicalServiceList
    plural: canonicalservices
    singular: canonicalservice
  scope: Namespaced
  validation:
    openAPIV3Schema:
      type: object
      description: CanonicalService is the Schema for the canonicalservices API
      properties:
        apiVersion:
          type: string
          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        kind:
          type: string
          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        metadata:
          type: object
        spec:
          type: object
          description: CanonicalServiceSpec defines the desired state of CanonicalService
          properties:
            description:
              type: string
              description: Description of the service
              maxLength: 500
              minLength: 0
            displayName:
              type: string
              description: Human-friendly name of the service
              maxLength: 100
              minLength: 0
        status:
          type: object
          description: CanonicalServiceStatus defines the observed state of CanonicalService
          properties:
            inactiveSince:
              type: string
              description: The time that the service was set to Inactive (if the service is Active, will be empty)
              format: date-time
            resourceTypes:
              type: array
              description: Array of the resource types the service is currently found on
              items:
                type: object
                description: Struct representing the types of resource a Canonical Service has been run on. It includes information about whether the resource is currently in use by the service, so that we can track resources that might still have valuable metrics but are not active.
                properties:
                  name:
                    type: string
                    enum:
                      - Pod
                      - WorkloadEntry
                  inactiveSince:
                    type: string
                    format: date-time
                  state:
                    type: string
                    description: CanonicalServiceState tells us whether the service is currently Active (aka there is at least one Pod or WorkloadEntry running this service) or Inactive.
                    enum:
                      - Active
                      - Inactive
                      - Error
                required:
                  - name
                  - state
            resourceVersionWhenBecameInactive:
              type: string
              description: The resource version of the Canonical Service resource when it was marked Inactive
            state:
              type: string
              description: Current state of the service
              enum:
                - Active
                - Inactive
                - Error
          required:
            - state
  version: v1beta1
  versions:
    - name: v1beta1
      served: true
      storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: canonical-service-leader-election-role
  namespace: asm-system
  annotations:
    gke.io/cluster: "gke://PROJECT_ID/us-central1-c/asm-cluster" # kpt-set: gke://${gcloud.core.project}/${gcloud.compute.location}/${gcloud.container.cluster}
rules:
  - resources:
      - configmaps
    apiGroups:
      - ""
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - resources:
      - configmaps/status
    apiGroups:
      - ""
    verbs:
      - get
      - update
      - patch
  - resources:
      - events
    apiGroups:
      - ""
    verbs:
      - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: canonical-service-manager-role
  annotations:
    gke.io/cluster: "gke://PROJECT_ID/us-central1-c/asm-cluster" # kpt-set: gke://${gcloud.core.project}/${gcloud.compute.location}/${gcloud.container.cluster}
  creationTimestamp: "null"
rules:
  - resources:
      - pods
    apiGroups:
      - ""
    verbs:
      - get
      - list
      - watch
  - resources:
      - canonicalservices
    apiGroups:
      - anthos.cloud.google.com
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - resources:
      - canonicalservices/status
    apiGroups:
      - anthos.cloud.google.com
    verbs:
      - get
      - patch
      - update
  - resources:
      - workloadentries
    apiGroups:
      - networking.istio.io
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: canonical-service-metrics-reader
  annotations:
    gke.io/cluster: "gke://PROJECT_ID/us-central1-c/asm-cluster" # kpt-set: gke://${gcloud.core.project}/${gcloud.compute.location}/${gcloud.container.cluster}
rules:
  - nonResourceURLs:
      - /metrics
    verbs:
      - get
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: canonical-service-account
  namespace: asm-system
  annotations:
    gke.io/cluster: "gke://PROJECT_ID/us-central1-c/asm-cluster" # kpt-set: gke://${gcloud.core.project}/${gcloud.compute.location}/${gcloud.container.cluster}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: canonical-service-leader-election-rolebinding
  namespace: asm-system
  annotations:
    gke.io/cluster: "gke://PROJECT_ID/us-central1-c/asm-cluster" # kpt-set: gke://${gcloud.core.project}/${gcloud.compute.location}/${gcloud.container.cluster}
roleRef:
  name: canonical-service-leader-election-role
  kind: Role
  apiGroup: rbac.authorization.k8s.io
subjects:
  - name: canonical-service-account
    namespace: asm-system
    kind: ServiceAccount
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: canonical-service-manager-rolebinding
  annotations:
    gke.io/cluster: "gke://PROJECT_ID/us-central1-c/asm-cluster" # kpt-set: gke://${gcloud.core.project}/${gcloud.compute.location}/${gcloud.container.cluster}
roleRef:
  name: canonical-service-manager-role
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
subjects:
  - name: canonical-service-account
    namespace: asm-system
    kind: ServiceAccount
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: canonical-service-proxy-rolebinding
  annotations:
    gke.io/cluster: "gke://PROJECT_ID/us-central1-c/asm-cluster" # kpt-set: gke://${gcloud.core.project}/${gcloud.compute.location}/${gcloud.container.cluster}
roleRef:
  name: canonical-service-proxy-role
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
subjects:
  - name: canonical-service-account
    namespace: asm-system
    kind: ServiceAccount
---
apiVersion: v1
kind: Service
metadata:
  name: canonical-service-controller-manager-metrics-service
  namespace: asm-system
  labels:
    control-plane: controller-manager
  annotations:
    gke.io/cluster: "gke://PROJECT_ID/us-central1-c/asm-cluster" # kpt-set: gke://${gcloud.core.project}/${gcloud.compute.location}/${gcloud.container.cluster}
spec:
  selector:
    control-plane: controller-manager
  ports:
    - name: https
      port: 8443
      targetPort: https
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: canonical-service-controller-manager
  namespace: asm-system
  labels:
    control-plane: controller-manager
  annotations:
    gke.io/cluster: "gke://PROJECT_ID/us-central1-c/asm-cluster" # kpt-set: gke://${gcloud.core.project}/${gcloud.compute.location}/${gcloud.container.cluster}
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      labels:
        control-plane: controller-manager
    spec:
      terminationGracePeriodSeconds: 10
      serviceAccountName: canonical-service-account
      containers:
        - name: kube-rbac-proxy
          image: gcr.io/kubebuilder/kube-rbac-proxy:v0.5.0
          args:
            - --secure-listen-address=0.0.0.0:8443
            - --upstream=http://127.0.0.1:8080/
            - --logtostderr=true
            - --v=10
          ports:
            - name: https
              containerPort: 8443
        - name: manager
          image: gcr.io/gke-release/asm/canonical-service-controller:1.7.3-asm.6 # kpt-set: ${anthos.servicemesh.canonicalServiceHub}
          command:
            - /manager
          args:
            - --metrics-addr=127.0.0.1:8080
            - --enable-leader-election
          resources:
            limits:
              cpu: 100m
              memory: 100Mi
            requests:
              cpu: 100m
              memory: 20Mi
