apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: monitoringdashboards.monitoring.kiali.io
spec:
  group: monitoring.kiali.io
  names:
    kind: MonitoringDashboard
    listKind: MonitoringDashboardList
    plural: monitoringdashboards
    singular: monitoringdashboard
  scope: Namespaced
  versions:
    - name: v1alpha1
      served: true
      storage: true
---
# Source: kiali-server/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kiali
  namespace: istio-system
  labels:
    app: kiali
    app.kubernetes.io/instance: kiali-server
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kiali
    app.kubernetes.io/version: "v1.26.0"
    helm.sh/chart: kiali-server-1.26.0
    version: "v1.26.0"
---
# Source: kiali-server/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: kiali
  namespace: istio-system
  labels:
    app: kiali
    app.kubernetes.io/instance: kiali-server
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kiali
    app.kubernetes.io/version: "v1.26.0"
    helm.sh/chart: kiali-server-1.26.0
    version: "v1.26.0"
data:
  config.yaml: |
    auth:
      openid: {}
      openshift:
        client_id_prefix: kiali
      strategy: anonymous
    deployment:
      accessible_namespaces:
      - '**'
      additional_service_yaml: {}
      affinity:
        node: {}
        pod: {}
        pod_anti: {}
      custom_dashboards:
        excludes:
        - ""
        includes:
        - '*'
      image_name: quay.io/kiali/kiali
      image_pull_policy: Always
      image_pull_secrets: []
      image_version: v1.26
      ingress_enabled: false
      namespace: istio-system
      node_selector: {}
      override_ingress_yaml:
        metadata: {}
      pod_annotations:
        sidecar.istio.io/inject: "false"
      pod_labels: {}
      priority_class_name: ""
      replicas: 1
      resources: {}
      secret_name: kiali
      service_annotations: {}
      service_type: ""
      tolerations: []
      verbose_mode: "3"
      version_label: v1.26.0
      view_only_mode: false
    external_services:
      custom_dashboards:
        enabled: true
    identity:
      cert_file: ""
      private_key_file: ""
    istio_namespace: istio-system
    login_token:
      signing_key: CHANGEME
    server:
      metrics_enabled: true
      metrics_port: 9090
      port: 20001
      web_root: /kiali
---
# Source: kiali-server/templates/role-viewer.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kiali-viewer
  labels:
    app: kiali
    app.kubernetes.io/instance: kiali-server
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kiali
    app.kubernetes.io/version: "v1.26.0"
    helm.sh/chart: kiali-server-1.26.0
    version: "v1.26.0"
rules:
  - resources:
      - configmaps
      - endpoints
      - namespaces
      - nodes
      - pods
      - pods/log
      - pods/proxy
      - replicationcontrollers
      - services
    apiGroups: [""]
    verbs:
      - get
      - list
      - watch
  - resources:
      - deployments
      - replicasets
      - statefulsets
    apiGroups: ["extensions", "apps"]
    verbs:
      - get
      - list
      - watch
  - resources:
      - horizontalpodautoscalers
    apiGroups: ["autoscaling"]
    verbs:
      - get
      - list
      - watch
  - resources:
      - cronjobs
      - jobs
    apiGroups: ["batch"]
    verbs:
      - get
      - list
      - watch
  - resources: ["*"]
    apiGroups:
      - networking.istio.io
      - security.istio.io
    verbs:
      - get
      - list
      - watch
  - resources:
      - deploymentconfigs
    apiGroups: ["apps.openshift.io"]
    verbs:
      - get
      - list
      - watch
  - resources:
      - projects
    apiGroups: ["project.openshift.io"]
    verbs:
      - get
  - resources:
      - routes
    apiGroups: ["route.openshift.io"]
    verbs:
      - get
  - resources:
      - monitoringdashboards
    apiGroups: ["monitoring.kiali.io"]
    verbs:
      - get
      - list
  - resources:
      - experiments
    apiGroups: ["iter8.tools"]
    verbs:
      - get
      - list
---
# Source: kiali-server/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kiali
  labels:
    app: kiali
    app.kubernetes.io/instance: kiali-server
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kiali
    app.kubernetes.io/version: "v1.26.0"
    helm.sh/chart: kiali-server-1.26.0
    version: "v1.26.0"
rules:
  - resources:
      - configmaps
      - endpoints
      - namespaces
      - nodes
      - pods
      - pods/log
      - pods/proxy
      - replicationcontrollers
      - services
    apiGroups: [""]
    verbs:
      - get
      - list
      - patch
      - watch
  - resources:
      - deployments
      - replicasets
      - statefulsets
    apiGroups: ["extensions", "apps"]
    verbs:
      - get
      - list
      - patch
      - watch
  - resources:
      - horizontalpodautoscalers
    apiGroups: ["autoscaling"]
    verbs:
      - get
      - list
      - watch
  - resources:
      - cronjobs
      - jobs
    apiGroups: ["batch"]
    verbs:
      - get
      - list
      - patch
      - watch
  - resources: ["*"]
    apiGroups:
      - networking.istio.io
      - security.istio.io
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - watch
  - resources:
      - deploymentconfigs
    apiGroups: ["apps.openshift.io"]
    verbs:
      - get
      - list
      - patch
      - watch
  - resources:
      - projects
    apiGroups: ["project.openshift.io"]
    verbs:
      - get
  - resources:
      - routes
    apiGroups: ["route.openshift.io"]
    verbs:
      - get
  - resources:
      - monitoringdashboards
    apiGroups: ["monitoring.kiali.io"]
    verbs:
      - get
      - list
  - resources:
      - experiments
    apiGroups: ["iter8.tools"]
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - watch
---
# Source: kiali-server/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kiali
  labels:
    app: kiali
    app.kubernetes.io/instance: kiali-server
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kiali
    app.kubernetes.io/version: "v1.26.0"
    helm.sh/chart: kiali-server-1.26.0
    version: "v1.26.0"
roleRef:
  name: kiali
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
subjects:
  - name: kiali
    namespace: istio-system
    kind: ServiceAccount
---
# Source: kiali-server/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: kiali
  namespace: istio-system
  labels:
    app: kiali
    app.kubernetes.io/instance: kiali-server
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kiali
    app.kubernetes.io/version: "v1.26.0"
    helm.sh/chart: kiali-server-1.26.0
    version: "v1.26.0"
  annotations:
    kiali.io/api-spec: https://kiali.io/api
    kiali.io/api-type: rest
spec:
  selector:
    app.kubernetes.io/instance: kiali-server
    app.kubernetes.io/name: kiali
  ports:
    - name: http
      protocol: TCP
      port: 20001
    - name: http-metrics
      protocol: TCP
      port: 9090
---
# Source: kiali-server/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kiali
  namespace: istio-system
  labels:
    app: kiali
    app.kubernetes.io/instance: kiali-server
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kiali
    app.kubernetes.io/version: "v1.26.0"
    helm.sh/chart: kiali-server-1.26.0
    version: "v1.26.0"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: kiali-server
      app.kubernetes.io/name: kiali
  template:
    metadata:
      name: kiali
      labels:
        app: kiali
        app.kubernetes.io/instance: kiali-server
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: kiali
        app.kubernetes.io/version: "v1.26.0"
        helm.sh/chart: kiali-server-1.26.0
        version: "v1.26.0"
      annotations:
        kiali.io/runtimes: go,kiali
        prometheus.io/port: "9090"
        prometheus.io/scrape: "true"
        sidecar.istio.io/inject: "false"
    spec:
      serviceAccountName: kiali
      containers:
        - name: kiali
          image: "quay.io/kiali/kiali:v1.26"
          command:
            - "/opt/kiali/kiali"
            - "-config"
            - "/kiali-configuration/config.yaml"
            - "-v"
            - "3"
          ports:
            - name: api-port
              containerPort: 20001
            - name: http-metrics
              containerPort: 9090
          env:
            - name: ACTIVE_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          volumeMounts:
            - name: kiali-configuration
              mountPath: "/kiali-configuration"
            - name: kiali-cert
              mountPath: "/kiali-cert"
            - name: kiali-secret
              mountPath: "/kiali-secret"
          livenessProbe:
            httpGet:
              port: api-port
              path: /kiali/healthz
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 30
          readinessProbe:
            httpGet:
              port: api-port
              path: /kiali/healthz
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 30
          imagePullPolicy: Always
      volumes:
        - name: kiali-configuration
          configMap:
            name: kiali
        - name: kiali-cert
          secret:
            optional: true
            secretName: istio.kiali-service-account
        - name: kiali-secret
          secret:
            optional: true
            secretName: kiali
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
---
# Source: kiali-server/templates/dashboards/envoy.yaml
apiVersion: "monitoring.kiali.io/v1alpha1"
kind: MonitoringDashboard
metadata:
  name: envoy
  labels:
    app: kiali
    app.kubernetes.io/instance: kiali-server
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kiali
    app.kubernetes.io/version: "v1.26.0"
    helm.sh/chart: kiali-server-1.26.0
    version: "v1.26.0"
spec:
  #  discoverOn: "envoy_server_uptime"
  items:
    - chart:
        name: "Pods uptime"
        dataType: "raw"
        metricName: "envoy_server_uptime"
        spans: 4
    - chart:
        name: "Allocated memory"
        dataType: "raw"
        metricName: "envoy_server_memory_allocated"
        min: 0
        spans: 4
        unit: "bytes"
    - chart:
        name: "Heap size"
        dataType: "raw"
        metricName: "envoy_server_memory_heap_size"
        min: 0
        spans: 4
        unit: "bytes"
    - chart:
        name: "Upstream active connections"
        dataType: "raw"
        metricName: "envoy_cluster_upstream_cx_active"
        spans: 6
    - chart:
        name: "Upstream total requests"
        dataType: "rate"
        metricName: "envoy_cluster_upstream_rq_total"
        spans: 6
        unit: "rps"
    - chart:
        name: "Downstream active connections"
        dataType: "raw"
        metricName: "envoy_listener_downstream_cx_active"
        spans: 6
    - chart:
        name: "Downstream HTTP requests"
        dataType: "rate"
        metricName: "envoy_listener_http_downstream_rq"
        spans: 6
        unit: "rps"
  title: Envoy Metrics
---
# Source: kiali-server/templates/dashboards/go.yaml
apiVersion: "monitoring.kiali.io/v1alpha1"
kind: MonitoringDashboard
metadata:
  name: go
  labels:
    app: kiali
    app.kubernetes.io/instance: kiali-server
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kiali
    app.kubernetes.io/version: "v1.26.0"
    helm.sh/chart: kiali-server-1.26.0
    version: "v1.26.0"
spec:
  discoverOn: "go_info"
  items:
    - chart:
        name: "CPU ratio"
        aggregations:
          - displayName: "Pod"
            label: "pod_name"
        dataType: "rate"
        metricName: "process_cpu_seconds_total"
        spans: 6
    - chart:
        name: "RSS Memory"
        aggregations:
          - displayName: "Pod"
            label: "pod_name"
        dataType: "raw"
        metricName: "process_resident_memory_bytes"
        spans: 6
        unit: "bytes"
    - chart:
        name: "Goroutines"
        aggregations:
          - displayName: "Pod"
            label: "pod_name"
        dataType: "raw"
        metricName: "go_goroutines"
        spans: 6
    - chart:
        name: "Heap allocation rate"
        aggregations:
          - displayName: "Pod"
            label: "pod_name"
        dataType: "rate"
        metricName: "go_memstats_alloc_bytes_total"
        spans: 6
        unit: "bytes/s"
    - chart:
        name: "GC rate"
        aggregations:
          - displayName: "Pod"
            label: "pod_name"
        dataType: "rate"
        metricName: "go_gc_duration_seconds_count"
        spans: 6
    - chart:
        name: "Next GC"
        aggregations:
          - displayName: "Pod"
            label: "pod_name"
        dataType: "raw"
        metricName: "go_memstats_next_gc_bytes"
        spans: 6
        unit: "bytes"
  runtime: Go
  title: Go Metrics
---
# Source: kiali-server/templates/dashboards/kiali.yaml
apiVersion: "monitoring.kiali.io/v1alpha1"
kind: MonitoringDashboard
metadata:
  name: kiali
  labels:
    app: kiali
    app.kubernetes.io/instance: kiali-server
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kiali
    app.kubernetes.io/version: "v1.26.0"
    helm.sh/chart: kiali-server-1.26.0
    version: "v1.26.0"
spec:
  items:
    - chart:
        name: "API processing duration"
        aggregations:
          - displayName: "Route"
            label: "route"
        dataType: "histogram"
        metricName: "kiali_api_processing_duration_seconds"
        spans: 6
        unit: "seconds"
    - chart:
        name: "Functions processing duration"
        aggregations:
          - displayName: "Function"
            label: "function"
          - displayName: "Package"
            label: "package"
        dataType: "histogram"
        metricName: "kiali_go_function_processing_duration_seconds"
        spans: 6
        unit: "seconds"
    - chart:
        name: "Failures"
        aggregations:
          - displayName: "Function"
            label: "function"
          - displayName: "Package"
            label: "package"
        dataType: "raw"
        metricName: "kiali_go_function_failures_total"
        spans: 12
  title: Kiali Internal Metrics
---
# Source: kiali-server/templates/dashboards/micrometer-1.0.6-jvm-pool.yaml
apiVersion: "monitoring.kiali.io/v1alpha1"
kind: MonitoringDashboard
metadata:
  name: micrometer-1.0.6-jvm-pool
  labels:
    app: kiali
    app.kubernetes.io/instance: kiali-server
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kiali
    app.kubernetes.io/version: "v1.26.0"
    helm.sh/chart: kiali-server-1.26.0
    version: "v1.26.0"
spec:
  discoverOn: "jvm_buffer_total_capacity_bytes"
  items:
    - chart:
        name: "Pool buffer memory used"
        aggregations:
          - displayName: "Pool"
            label: "id"
        dataType: "raw"
        metricName: "jvm_buffer_memory_used_bytes"
        spans: 4
        unit: "bytes"
    - chart:
        name: "Pool buffer capacity"
        aggregations:
          - displayName: "Pool"
            label: "id"
        dataType: "raw"
        metricName: "jvm_buffer_total_capacity_bytes"
        spans: 4
        unit: "bytes"
    - chart:
        name: "Pool buffer count"
        aggregations:
          - displayName: "Pool"
            label: "id"
        dataType: "raw"
        metricName: "jvm_buffer_count"
        spans: 4
        unit: "bytes"
  runtime: JVM
  title: JVM Pool Metrics
---
# Source: kiali-server/templates/dashboards/micrometer-1.0.6-jvm.yaml
apiVersion: "monitoring.kiali.io/v1alpha1"
kind: MonitoringDashboard
metadata:
  name: micrometer-1.0.6-jvm
  labels:
    app: kiali
    app.kubernetes.io/instance: kiali-server
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kiali
    app.kubernetes.io/version: "v1.26.0"
    helm.sh/chart: kiali-server-1.26.0
    version: "v1.26.0"
spec:
  discoverOn: "jvm_threads_live"
  items:
    - chart:
        name: "Total live threads"
        dataType: "raw"
        metricName: "jvm_threads_live"
        spans: 4
    - chart:
        name: "Daemon threads"
        dataType: "raw"
        metricName: "jvm_threads_daemon"
        spans: 4
    - chart:
        name: "Loaded classes"
        dataType: "raw"
        metricName: "jvm_classes_loaded"
        spans: 4
    - chart:
        name: "Memory used"
        aggregations:
          - displayName: "Area"
            label: "area"
          - displayName: "Space"
            label: "id"
        dataType: "raw"
        metricName: "jvm_memory_used_bytes"
        spans: 4
        unit: "bytes"
    - chart:
        name: "Memory commited"
        aggregations:
          - displayName: "Area"
            label: "area"
          - displayName: "Space"
            label: "id"
        dataType: "raw"
        metricName: "jvm_memory_committed_bytes"
        spans: 4
        unit: "bytes"
    - chart:
        name: "Memory max"
        aggregations:
          - displayName: "Area"
            label: "area"
          - displayName: "Space"
            label: "id"
        dataType: "raw"
        metricName: "jvm_memory_max_bytes"
        spans: 4
        unit: "bytes"
  runtime: JVM
  title: JVM Metrics
---
# Source: kiali-server/templates/dashboards/micrometer-1.1-jvm.yaml
apiVersion: "monitoring.kiali.io/v1alpha1"
kind: MonitoringDashboard
metadata:
  name: micrometer-1.1-jvm
  labels:
    app: kiali
    app.kubernetes.io/instance: kiali-server
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kiali
    app.kubernetes.io/version: "v1.26.0"
    helm.sh/chart: kiali-server-1.26.0
    version: "v1.26.0"
spec:
  discoverOn: "jvm_threads_live_threads"
  items:
    - chart:
        name: "Memory used"
        aggregations:
          - displayName: "Area"
            label: "area"
          - displayName: "Space"
            label: "id"
        dataType: "raw"
        metricName: "jvm_memory_used_bytes"
        spans: 4
        unit: "bytes"
    - chart:
        name: "Memory commited"
        aggregations:
          - displayName: "Area"
            label: "area"
          - displayName: "Space"
            label: "id"
        dataType: "raw"
        metricName: "jvm_memory_committed_bytes"
        spans: 4
        unit: "bytes"
    - chart:
        name: "Memory max"
        aggregations:
          - displayName: "Area"
            label: "area"
          - displayName: "Space"
            label: "id"
        dataType: "raw"
        metricName: "jvm_memory_max_bytes"
        spans: 4
        unit: "bytes"
    - chart:
        name: "Total live threads"
        dataType: "raw"
        metricName: "jvm_threads_live_threads"
        spans: 4
    - chart:
        name: "Daemon threads"
        dataType: "raw"
        metricName: "jvm_threads_daemon_threads"
        spans: 4
    - chart:
        name: "Threads states"
        aggregations:
          - displayName: "State"
            label: "state"
        dataType: "raw"
        metricName: "jvm_threads_states_threads"
        spans: 4
  runtime: JVM
  title: JVM Metrics
---
# Source: kiali-server/templates/dashboards/microprofile-1.1.yaml
apiVersion: "monitoring.kiali.io/v1alpha1"
kind: MonitoringDashboard
metadata:
  name: microprofile-1.1
  labels:
    app: kiali
    app.kubernetes.io/instance: kiali-server
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kiali
    app.kubernetes.io/version: "v1.26.0"
    helm.sh/chart: kiali-server-1.26.0
    version: "v1.26.0"
spec:
  discoverOn: "base:thread_count"
  items:
    - chart:
        name: "Current loaded classes"
        dataType: "raw"
        metricName: "base:classloader_current_loaded_class_count"
        spans: 6
    - chart:
        name: "Unloaded classes"
        dataType: "raw"
        metricName: "base:classloader_total_unloaded_class_count"
        spans: 6
    - chart:
        name: "Thread count"
        dataType: "raw"
        metricName: "base:thread_count"
        spans: 4
    - chart:
        name: "Thread max count"
        dataType: "raw"
        metricName: "base:thread_max_count"
        spans: 4
    - chart:
        name: "Thread daemon count"
        dataType: "raw"
        metricName: "base:thread_daemon_count"
        spans: 4
    - chart:
        name: "Committed heap"
        dataType: "raw"
        metricName: "base:memory_committed_heap_bytes"
        spans: 4
        unit: "bytes"
    - chart:
        name: "Max heap"
        dataType: "raw"
        metricName: "base:memory_max_heap_bytes"
        spans: 4
        unit: "bytes"
    - chart:
        name: "Used heap"
        dataType: "raw"
        metricName: "base:memory_used_heap_bytes"
        spans: 4
        unit: "bytes"
  runtime: MicroProfile
  title: MicroProfile Metrics
---
# Source: kiali-server/templates/dashboards/microprofile-x.y.yaml
apiVersion: "monitoring.kiali.io/v1alpha1"
kind: MonitoringDashboard
metadata:
  name: microprofile-x.y
  labels:
    app: kiali
    app.kubernetes.io/instance: kiali-server
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kiali
    app.kubernetes.io/version: "v1.26.0"
    helm.sh/chart: kiali-server-1.26.0
    version: "v1.26.0"
spec:
  discoverOn: "base:gc_complete_scavenger_count"
  items:
    - chart:
        name: "Young GC time"
        dataType: "raw"
        metricName: "base:gc_young_generation_scavenger_time_seconds"
        spans: 3
        unit: "seconds"
    - chart:
        name: "Young GC count"
        dataType: "raw"
        metricName: "base:gc_young_generation_scavenger_count"
        spans: 3
    - chart:
        name: "Total GC time"
        dataType: "raw"
        metricName: "base:gc_complete_scavenger_time_seconds"
        spans: 3
        unit: "seconds"
    - chart:
        name: "Total GC count"
        dataType: "raw"
        metricName: "base:gc_complete_scavenger_count"
        spans: 3
  runtime: MicroProfile
  title: MicroProfile Metrics
---
# Source: kiali-server/templates/dashboards/nodejs.yaml
apiVersion: "monitoring.kiali.io/v1alpha1"
kind: MonitoringDashboard
metadata:
  name: nodejs
  labels:
    app: kiali
    app.kubernetes.io/instance: kiali-server
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kiali
    app.kubernetes.io/version: "v1.26.0"
    helm.sh/chart: kiali-server-1.26.0
    version: "v1.26.0"
spec:
  discoverOn: "nodejs_active_handles_total"
  items:
    - chart:
        name: "Active handles"
        dataType: "raw"
        metricName: "nodejs_active_handles_total"
        spans: 4
    - chart:
        name: "Active requests"
        dataType: "raw"
        metricName: "nodejs_active_requests_total"
        spans: 4
    - chart:
        name: "Event loop lag"
        dataType: "raw"
        metricName: "nodejs_eventloop_lag_seconds"
        spans: 4
        unit: "seconds"
    - chart:
        name: "Total heap size"
        aggregations:
          - displayName: "Space"
            label: "space"
        dataType: "raw"
        metricName: "nodejs_heap_space_size_total_bytes"
        spans: 12
        unit: "bytes"
    - chart:
        name: "Used heap size"
        aggregations:
          - displayName: "Space"
            label: "space"
        dataType: "raw"
        metricName: "nodejs_heap_space_size_used_bytes"
        spans: 6
        unit: "bytes"
    - chart:
        name: "Available heap size"
        aggregations:
          - displayName: "Space"
            label: "space"
        dataType: "raw"
        metricName: "nodejs_heap_space_size_available_bytes"
        spans: 6
        unit: "bytes"
  runtime: Node.js
  title: Node.js Metrics
---
# Source: kiali-server/templates/dashboards/quarkus.yaml
apiVersion: "monitoring.kiali.io/v1alpha1"
kind: MonitoringDashboard
metadata:
  name: quarkus
  labels:
    app: kiali
    app.kubernetes.io/instance: kiali-server
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kiali
    app.kubernetes.io/version: "v1.26.0"
    helm.sh/chart: kiali-server-1.26.0
    version: "v1.26.0"
spec:
  items:
    - chart:
        name: "Thread count"
        dataType: "raw"
        metricName: "vendor:thread_count"
        spans: 4
    - chart:
        name: "Used heap"
        dataType: "raw"
        metricName: "vendor:memory_heap_usage_bytes"
        spans: 4
        unit: "bytes"
    - chart:
        name: "Used non-heap"
        dataType: "raw"
        metricName: "vendor:memory_non_heap_usage_bytes"
        spans: 4
        unit: "bytes"
    - include: "microprofile-x.y"
  runtime: Quarkus
  title: Quarkus Metrics
---
# Source: kiali-server/templates/dashboards/springboot-jvm-pool.yaml
apiVersion: "monitoring.kiali.io/v1alpha1"
kind: MonitoringDashboard
metadata:
  name: springboot-jvm-pool
  labels:
    app: kiali
    app.kubernetes.io/instance: kiali-server
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kiali
    app.kubernetes.io/version: "v1.26.0"
    helm.sh/chart: kiali-server-1.26.0
    version: "v1.26.0"
spec:
  items:
    - include: "micrometer-1.0.6-jvm-pool"
  runtime: Spring Boot
  title: JVM Pool Metrics
---
# Source: kiali-server/templates/dashboards/springboot-jvm.yaml
apiVersion: "monitoring.kiali.io/v1alpha1"
kind: MonitoringDashboard
metadata:
  name: springboot-jvm
  labels:
    app: kiali
    app.kubernetes.io/instance: kiali-server
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kiali
    app.kubernetes.io/version: "v1.26.0"
    helm.sh/chart: kiali-server-1.26.0
    version: "v1.26.0"
spec:
  items:
    - include: "micrometer-1.0.6-jvm"
  runtime: Spring Boot
  title: JVM Metrics
---
# Source: kiali-server/templates/dashboards/springboot-tomcat.yaml
apiVersion: "monitoring.kiali.io/v1alpha1"
kind: MonitoringDashboard
metadata:
  name: springboot-tomcat
  labels:
    app: kiali
    app.kubernetes.io/instance: kiali-server
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kiali
    app.kubernetes.io/version: "v1.26.0"
    helm.sh/chart: kiali-server-1.26.0
    version: "v1.26.0"
spec:
  items:
    - include: "tomcat"
  runtime: Spring Boot
  title: Tomcat Metrics
---
# Source: kiali-server/templates/dashboards/thorntail.yaml
apiVersion: "monitoring.kiali.io/v1alpha1"
kind: MonitoringDashboard
metadata:
  name: thorntail
  labels:
    app: kiali
    app.kubernetes.io/instance: kiali-server
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kiali
    app.kubernetes.io/version: "v1.26.0"
    helm.sh/chart: kiali-server-1.26.0
    version: "v1.26.0"
spec:
  discoverOn: "vendor:loaded_modules"
  items:
    - include: "microprofile-1.1"
    - chart:
        name: "Loaded modules"
        dataType: "raw"
        metricName: "vendor:loaded_modules"
        spans: 6
  runtime: Thorntail
  title: Thorntail Metrics
---
# Source: kiali-server/templates/dashboards/tomcat.yaml
apiVersion: "monitoring.kiali.io/v1alpha1"
kind: MonitoringDashboard
metadata:
  name: tomcat
  labels:
    app: kiali
    app.kubernetes.io/instance: kiali-server
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kiali
    app.kubernetes.io/version: "v1.26.0"
    helm.sh/chart: kiali-server-1.26.0
    version: "v1.26.0"
spec:
  discoverOn: "tomcat_sessions_created_total"
  items:
    - chart:
        name: "Sessions created"
        dataType: "raw"
        metricName: "tomcat_sessions_created_total"
        spans: 4
    - chart:
        name: "Active sessions"
        dataType: "raw"
        metricName: "tomcat_sessions_active_current"
        spans: 4
    - chart:
        name: "Sessions rejected"
        dataType: "raw"
        metricName: "tomcat_sessions_rejected_total"
        spans: 4
    - chart:
        name: "Bytes sent"
        aggregations:
          - displayName: "Name"
            label: "name"
        dataType: "rate"
        metricName: "tomcat_global_sent_bytes_total"
        spans: 6
        unit: "bitrate"
    - chart:
        name: "Bytes received"
        aggregations:
          - displayName: "Name"
            label: "name"
        dataType: "rate"
        metricName: "tomcat_global_received_bytes_total"
        spans: 6
        unit: "bitrate"
    - chart:
        name: "Global errors"
        aggregations:
          - displayName: "Name"
            label: "name"
        dataType: "raw"
        metricName: "tomcat_global_error_total"
        spans: 6
    - chart:
        name: "Servlet errors"
        aggregations:
          - displayName: "Name"
            label: "name"
        dataType: "raw"
        metricName: "tomcat_servlet_error_total"
        spans: 6
  runtime: Tomcat
  title: Tomcat Metrics
---
# Source: kiali-server/templates/dashboards/vertx-client.yaml
apiVersion: "monitoring.kiali.io/v1alpha1"
kind: MonitoringDashboard
metadata:
  name: vertx-client
  labels:
    app: kiali
    app.kubernetes.io/instance: kiali-server
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kiali
    app.kubernetes.io/version: "v1.26.0"
    helm.sh/chart: kiali-server-1.26.0
    version: "v1.26.0"
spec:
  discoverOn: "vertx_http_client_connections"
  items:
    - chart:
        name: "Client response time"
        aggregations:
          - displayName: "Path"
            label: "path"
          - displayName: "Method"
            label: "method"
        dataType: "histogram"
        metricName: "vertx_http_client_responseTime_seconds"
        spans: 6
        unit: "seconds"
    - chart:
        name: "Client request count rate"
        aggregations:
          - displayName: "Path"
            label: "path"
          - displayName: "Method"
            label: "method"
        dataType: "rate"
        metricName: "vertx_http_client_requestCount_total"
        spans: 6
        unit: "ops"
    - chart:
        name: "Client active connections"
        dataType: "raw"
        metricName: "vertx_http_client_connections"
        spans: 6
    - chart:
        name: "Client active websockets"
        dataType: "raw"
        metricName: "vertx_http_client_wsConnections"
        spans: 6
    - chart:
        name: "Client bytes sent"
        dataType: "histogram"
        metricName: "vertx_http_client_bytesSent"
        spans: 6
        unit: "bytes"
    - chart:
        name: "Client bytes received"
        dataType: "histogram"
        metricName: "vertx_http_client_bytesReceived"
        spans: 6
        unit: "bytes"
  runtime: Vert.x
  title: Vert.x Client Metrics
---
# Source: kiali-server/templates/dashboards/vertx-eventbus.yaml
apiVersion: "monitoring.kiali.io/v1alpha1"
kind: MonitoringDashboard
metadata:
  name: vertx-eventbus
  labels:
    app: kiali
    app.kubernetes.io/instance: kiali-server
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kiali
    app.kubernetes.io/version: "v1.26.0"
    helm.sh/chart: kiali-server-1.26.0
    version: "v1.26.0"
spec:
  discoverOn: "vertx_eventbus_handlers"
  items:
    - chart:
        name: "Event bus handlers"
        aggregations:
          - displayName: "Eventbus address"
            label: "address"
        dataType: "raw"
        metricName: "vertx_eventbus_handlers"
        spans: 6
    - chart:
        name: "Event bus pending messages"
        aggregations:
          - displayName: "Eventbus address"
            label: "address"
        dataType: "raw"
        metricName: "vertx_eventbus_pending"
        spans: 6
    - chart:
        name: "Event bus processing time"
        aggregations:
          - displayName: "Eventbus address"
            label: "address"
        dataType: "histogram"
        metricName: "vertx_eventbus_processingTime_seconds"
        spans: 6
        unit: "seconds"
    - chart:
        name: "Event bus bytes read"
        aggregations:
          - displayName: "Eventbus address"
            label: "address"
        dataType: "histogram"
        metricName: "vertx_eventbus_bytesRead"
        spans: 6
        unit: "bytes"
    - chart:
        name: "Event bus bytes written"
        aggregations:
          - displayName: "Eventbus address"
            label: "address"
        dataType: "histogram"
        metricName: "vertx_eventbus_bytesWritten"
        spans: 6
        unit: "bytes"
  runtime: Vert.x
  title: Vert.x Eventbus Metrics
---
# Source: kiali-server/templates/dashboards/vertx-jvm.yaml
apiVersion: "monitoring.kiali.io/v1alpha1"
kind: MonitoringDashboard
metadata:
  name: vertx-jvm
  labels:
    app: kiali
    app.kubernetes.io/instance: kiali-server
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kiali
    app.kubernetes.io/version: "v1.26.0"
    helm.sh/chart: kiali-server-1.26.0
    version: "v1.26.0"
spec:
  items:
    - include: "micrometer-1.1-jvm"
  runtime: Vert.x
  title: JVM Metrics
---
# Source: kiali-server/templates/dashboards/vertx-pool.yaml
apiVersion: "monitoring.kiali.io/v1alpha1"
kind: MonitoringDashboard
metadata:
  name: vertx-pool
  labels:
    app: kiali
    app.kubernetes.io/instance: kiali-server
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kiali
    app.kubernetes.io/version: "v1.26.0"
    helm.sh/chart: kiali-server-1.26.0
    version: "v1.26.0"
spec:
  discoverOn: "vertx_pool_ratio"
  items:
    - chart:
        name: "Usage duration"
        aggregations:
          - displayName: "Name"
            label: "pool_name"
          - displayName: "Type"
            label: "pool_type"
        dataType: "histogram"
        metricName: "vertx_pool_usage_seconds"
        spans: 6
        unit: "seconds"
    - chart:
        name: "Usage ratio"
        aggregations:
          - displayName: "Name"
            label: "pool_name"
          - displayName: "Type"
            label: "pool_type"
        dataType: "raw"
        metricName: "vertx_pool_ratio"
        spans: 6
    - chart:
        name: "Queue size"
        aggregations:
          - displayName: "Name"
            label: "pool_name"
          - displayName: "Type"
            label: "pool_type"
        dataType: "raw"
        metricName: "vertx_pool_queue_size"
        spans: 6
    - chart:
        name: "Time in queue"
        aggregations:
          - displayName: "Name"
            label: "pool_name"
          - displayName: "Type"
            label: "pool_type"
        dataType: "histogram"
        metricName: "vertx_pool_queue_delay_seconds"
        spans: 6
        unit: "seconds"
    - chart:
        name: "Resources used"
        aggregations:
          - displayName: "Name"
            label: "pool_name"
          - displayName: "Type"
            label: "pool_type"
        dataType: "raw"
        metricName: "vertx_pool_inUse"
        spans: 6
  runtime: Vert.x
  title: Vert.x Pools Metrics
---
# Source: kiali-server/templates/dashboards/vertx-server.yaml
apiVersion: "monitoring.kiali.io/v1alpha1"
kind: MonitoringDashboard
metadata:
  name: vertx-server
  labels:
    app: kiali
    app.kubernetes.io/instance: kiali-server
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kiali
    app.kubernetes.io/version: "v1.26.0"
    helm.sh/chart: kiali-server-1.26.0
    version: "v1.26.0"
spec:
  discoverOn: "vertx_http_server_connections"
  items:
    - chart:
        name: "Server response time"
        aggregations:
          - displayName: "Path"
            label: "path"
          - displayName: "Method"
            label: "method"
        dataType: "histogram"
        metricName: "vertx_http_server_responseTime_seconds"
        spans: 6
        unit: "seconds"
    - chart:
        name: "Server request count rate"
        aggregations:
          - displayName: "Error code"
            label: "code"
          - displayName: "Path"
            label: "path"
          - displayName: "Method"
            label: "method"
        dataType: "rate"
        metricName: "vertx_http_server_requestCount_total"
        spans: 6
        unit: "ops"
    - chart:
        name: "Server active connections"
        dataType: "raw"
        metricName: "vertx_http_server_connections"
        spans: 6
    - chart:
        name: "Server active websockets"
        dataType: "raw"
        metricName: "vertx_http_server_wsConnections"
        spans: 6
    - chart:
        name: "Server bytes sent"
        dataType: "histogram"
        metricName: "vertx_http_server_bytesSent"
        spans: 6
        unit: "bytes"
    - chart:
        name: "Server bytes received"
        dataType: "histogram"
        metricName: "vertx_http_server_bytesReceived"
        spans: 6
        unit: "bytes"
  runtime: Vert.x
  title: Vert.x Server Metrics
